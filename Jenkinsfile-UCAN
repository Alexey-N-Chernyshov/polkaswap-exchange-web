@Library('jenkins-library') _

def agentImage   = 'docker.soramitsu.co.jp/build-tools/node:14-ubuntu-extended'
def agentLabel   = 'aws_nbc_build'
def gitHubUser   = 'sorabot'
def gitAddrRegex = ''

pipeline {
  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '40'))
    timestamps()
  }

  agent {
    docker {
      label "${agentLabel}"
      image "${agentImage}"
      registryUrl 'https://docker.soramitsu.co.jp'
      registryCredentialsId 'bot-build-tools-ro'
      alwaysPull true
    }
  }

  environment {
    API_KEY = credentials('nft-storage-api-key')
  }

  stages {
    stage('Install dependencies') {
      steps {
        script {
          sh """
            cd scripts/ucan
            npm install 
          """
        }
      }
    }
    stage('UCAN generation') {
      steps {
        script {
          sh """
            echo ${API_KEY:0:10}
            cd scripts/ucan
            node generateNftServiceKeypair.js
            mv _ucan.json_ /
          """
        }
      }
    }
    stage("Copy token to deploy branch'") {
      steps {
        withCredentials([string(credentialsId: 'sorabot-github-token', variable: 'GH_TOKEN')]) {
          sh """
          ${gitAddrRegex} = GIT_URL.replaceFirst("^http[s]?://","")
          git checkout -b ucan-temp
          find -maxdepth 1 ! -name _ucan.json_ ! -name .git ! -name . -exec rm -r {} \\;
          git config user.email "admin@soramitsu.co.jp"
          git config user.name "${gitHubUser}"
          git add --all
          git commit -a -m "copy"
          git push https://${gitHubUser}:${GH_TOKEN}@${gitAddrRegex} ucan-temp:ucan-token --force
          """
        }
      }
    }
  }
  post {
    cleanup {
      script {
        cleanWs()
      }
    }
  }
}